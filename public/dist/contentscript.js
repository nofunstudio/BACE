(()=>{"use strict";console.log("this is at the start of content script");const e=chrome.runtime.connect({name:"r3f-devtools"});console.log("this is port in content script: ",e),e.postMessage({name:"connect"}),console.log("port has posted a message"),e.onDisconnect.addListener((e=>{console.error("disconnected from background",e)})),e.onMessage.addListener((function(t){console.log("before sending out msg.data"),t&&e.postMessage(t)}));const t=document.createElement("script");t.text="\n(() => {\n/**\n * This script injected by the installed three.js developer\n * tools extension.\n * https://github.com/threejs/three-devtools\n */\n\nconst $devtoolsReady = Symbol('devtoolsReady');\nconst $backlog = Symbol('backlog');\n\n// The __THREE_DEVTOOLS__ target is small and light-weight, and collects\n// events triggered until the devtools panel is ready, which is when\n// the events are flushed.\nconst target = new class ThreeDevToolsTarget extends EventTarget {\n  constructor() {\n    super();\n    this[$devtoolsReady] = false;\n    this[$backlog] = [];\n    console.log(\"inside ThreeDevToolsTarget but not devtools ready :(\");\n    this.addEventListener('devtools-ready', e => {\n      console.log(\"WHOA DEVTOOLS-READY!?\");\n      this[$devtoolsReady] = true;\n      for (let event of this[$backlog]) {\n        this.dispatchEvent(event);\n      }\n    }, { once: true });\n  }\n\n  dispatchEvent(event) {\n    if (this[$devtoolsReady] || event.type === 'devtools-ready') {\n      super.dispatchEvent(event);\n    } else {\n      this[$backlog].push(event);\n    }\n  }\n}\n\nObject.defineProperty(window, '__R3F_DEVTOOLS__', {\n  value: target,\n});\n})();\n",t.onload=()=>{t.parentNode.removeChild(t)},(document.head||document.documentElement).appendChild(t),window.addEventListener("message",(e=>{if(e.source===window&&"object"==typeof e.data&&"three-devtools"===e.data.id)try{chrome.runtime.sendMessage(e.data)}catch(e){console.error(e),chrome.runtime.sendMessage({type:"error",id:"r3f-devtools",data:e.toString()})}})),console.log("this is at the end of content script")})();