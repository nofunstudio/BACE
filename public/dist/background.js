(()=>{"use strict";console.log("background loaded 2");const e=new Map;console.log("entering onConnect listener"),chrome.runtime.onConnect.addListener((o=>{let t;console.log("port: ",o);const n=n=>{if(console.log("onConnect",n.name),"connect"===n.name){const n={active:!0,currentWindow:!0};chrome.tabs.query(n,(([n])=>{chrome.runtime.lastError?console.error(chrome.runtime.lastError):t=n.id,t&&(e.set(t,o),console.log("connections: ",e))}))}};o.onMessage.addListener(n),o.onDisconnect.addListener((o=>{o.onMessage.removeListener(n),e.delete(t)}))})),chrome.runtime.onMessage.addListener(((o,t,n)=>{if(t.tab){const n=t.tab.id;e.has(n)&&e.get(n).postMessage(o)}return!0})),chrome.webNavigation.onCommitted.addListener((function(o){console.log("these are the details in onCommitted in background.ts",o),console.log("this is the detail.tabId in onCommitted in background.ts",o.tabId),console.log("this is the detail.frameId in onCommitted in background.ts",o.frameId),console.log("connections inside onCommitted: ",e),0===o.frameId&&(console.log("onCommitted",o.tabId,e.has(o.tabId)),e.has(o.tabId)&&e.get(o.tabId).postMessage({type:"committed",id:"r3f-devtools"}))})),console.log("this is at the end of background.ts")})();